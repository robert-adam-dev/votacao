/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.application.api;

import com.example.application.dto.ErrorBaseDto;
import com.example.application.dto.ErrorDto;
import com.example.application.dto.InputNewStaveDto;
import com.example.application.dto.InputStartSessionDto;
import com.example.application.dto.InputUpdateStaveDto;
import com.example.application.dto.StaveDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-04-05T16:28:17.547846-03:00[America/Sao_Paulo]")
@Validated
@Tag(name = "Stave", description = "the Stave API")
public interface StaveApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /staves : Cancela uma Pauta
     * Uma Pauta pode ser cancelada respeita as seguinte regra:  * A pauta poderá ser cancelada so e somente só, estiver no estado __CREATE__ ou __VOTING_IN_PROGRESS__;
     *
     * @param id identificar único Pauta para localizar a Pauta a ser cancelada. (optional)
     * @return Pauta cancelada com sucesso. (status code 204)
     *         or Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404). (status code 404)
     *         or &#x60;Requisição&#x60; foi aceita mas, não foi possível concluir com sucesso, devido __alguma regra de negocio__ por exemplo: validações, ou estado de uma Pauta não permite a ação que originou o error.  Para maiores informações consulte a [rfc-4918](https://datatracker.ietf.org/doc/html/rfc4918#section-11.2).  (status code 422)
     *         or Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1).  (status code 500)
     */
    @Operation(
        operationId = "cancel",
        summary = "Cancela uma Pauta",
        tags = { "Stave" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Pauta cancelada com sucesso."),
            @ApiResponse(responseCode = "404", description = "Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404).", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "422", description = "`Requisição` foi aceita mas, não foi possível concluir com sucesso, devido __alguma regra de negocio__ por exemplo: validações, ou estado de uma Pauta não permite a ação que originou o error.  Para maiores informações consulte a [rfc-4918](https://datatracker.ietf.org/doc/html/rfc4918#section-11.2). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "500", description = "Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/staves",
        produces = { "application/json" }
    )
    default ResponseEntity<Void> cancel(
        @Parameter(name = "id", description = "identificar único Pauta para localizar a Pauta a ser cancelada.", schema = @Schema(description = "")) @PathVariable("id") Long id
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /staves : Cria uma nova Pauta
     * Cria um recurso Pauta &#x60;Stave&#x60;
     *
     * @param inputNewStaveDto  (required)
     * @return Retorno de uma solicitação para ação de criar uma Pauta com sucesso. (status code 201)
     *         or Requisição está invalida, o corpo da mensagem está mal formatada, por exemplo, campos faltando ou campos estão inválidos (formato inválido).   No corpo da resposta encontrar uma lista de detalhes que dará informações pertinentes para corrigir o erro. Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.1).  (status code 400)
     *         or &#x60;Requisição&#x60; foi aceita mas, os dados enviados está em conflito com o recurso a ser manipulado por exemplo: uma Pauta com um tema já foi cadastrada anteriormente.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.409). (status code 409)
     *         or &#x60;Requisição&#x60; foi aceita mas, não foi possível concluir com sucesso, devido __alguma regra de negocio__ por exemplo: validações, ou estado de uma Pauta não permite a ação que originou o error.  Para maiores informações consulte a [rfc-4918](https://datatracker.ietf.org/doc/html/rfc4918#section-11.2).  (status code 422)
     *         or Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1).  (status code 500)
     */
    @Operation(
        operationId = "create",
        summary = "Cria uma nova Pauta",
        tags = { "Stave" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Retorno de uma solicitação para ação de criar uma Pauta com sucesso.", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  StaveDto.class))),
            @ApiResponse(responseCode = "400", description = "Requisição está invalida, o corpo da mensagem está mal formatada, por exemplo, campos faltando ou campos estão inválidos (formato inválido).   No corpo da resposta encontrar uma lista de detalhes que dará informações pertinentes para corrigir o erro. Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorDto.class))),
            @ApiResponse(responseCode = "409", description = "`Requisição` foi aceita mas, os dados enviados está em conflito com o recurso a ser manipulado por exemplo: uma Pauta com um tema já foi cadastrada anteriormente.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.409).", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "422", description = "`Requisição` foi aceita mas, não foi possível concluir com sucesso, devido __alguma regra de negocio__ por exemplo: validações, ou estado de uma Pauta não permite a ação que originou o error.  Para maiores informações consulte a [rfc-4918](https://datatracker.ietf.org/doc/html/rfc4918#section-11.2). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "500", description = "Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/staves",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StaveDto> create(
        @Parameter(name = "InputNewStaveDto", description = "", required = true, schema = @Schema(description = "")) @Valid @RequestBody InputNewStaveDto inputNewStaveDto
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"startSessionVoting\" : \"2021-01-30T08:30:00Z\", \"endSessionVoting\" : \"2021-01-30T08:30:00Z\", \"totalVotes\" : 500, \"totalVotesNo\" : 200, \"description\" : \"Descrição da Pauta para o tema tal.\", \"theme\" : \"Pauta que será discutida tal assunto.\", \"id\" : 1001, \"state\" : \"create\", \"totalVotesYes\" : 300, \"createAt\" : \"2021-01-30T08:30:00Z\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /start-session-vote : Inicia uma sessão para votação de uma pauta especifica.
     * Inicia uma sessão de votação. Lembre-se caso o timeToLive não for informado, o valor padrão será utilizado, neste caso o valor é 1 (um) minuto.
     *
     * @param id identificar único Pauta para iniciar a sessão. (optional)
     * @param inputStartSessionDto  (optional)
     * @return Sessão de votação iniciada com sucesso (status code 202)
     *         or Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404). (status code 404)
     *         or Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1).  (status code 500)
     */
    @Operation(
        operationId = "startSession",
        summary = "Inicia uma sessão para votação de uma pauta especifica.",
        tags = { "Stave" },
        responses = {
            @ApiResponse(responseCode = "202", description = "Sessão de votação iniciada com sucesso"),
            @ApiResponse(responseCode = "404", description = "Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404).", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "500", description = "Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/start-session-vote",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> startSession(
        @Parameter(name = "id", description = "identificar único Pauta para iniciar a sessão.", schema = @Schema(description = "")) @PathVariable("id") Long id,
        @Parameter(name = "InputStartSessionDto", description = "", schema = @Schema(description = "")) @Valid @RequestBody(required = false) InputStartSessionDto inputStartSessionDto
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /staves : Atualiza uma Pauta
     * Uma Pauta pode ser atualizada respeita as seguintes regras:  * A pauta poderá ser atualizada so e somente só, estiver no estado __CREATE__; * O tema &#x60;theme&#x60;, apenas se tema não estiver cadastrado posteriormente, exceto a Pauta com o tema cadastrado anteriormente estive no estado finalizado __SESSION_VOTES_DONE__;
     *
     * @param inputUpdateStaveDto  (required)
     * @param id identificar único Pauta encontrar a pauta a ser atualizada (optional)
     * @return Retorno de uma solicitação para ação de atualizar uma Pauta com sucesso. (status code 200)
     *         or Requisição está invalida, o corpo da mensagem está mal formatada, por exemplo, campos faltando ou campos estão inválidos (formato inválido).   No corpo da resposta encontrar uma lista de detalhes que dará informações pertinentes para corrigir o erro. Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.1).  (status code 400)
     *         or Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404). (status code 404)
     *         or &#x60;Requisição&#x60; foi aceita mas, os dados enviados está em conflito com o recurso a ser manipulado por exemplo: uma Pauta com um tema já foi cadastrada anteriormente.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.409). (status code 409)
     *         or Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1).  (status code 500)
     */
    @Operation(
        operationId = "update",
        summary = "Atualiza uma Pauta",
        tags = { "Stave" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Retorno de uma solicitação para ação de atualizar uma Pauta com sucesso.", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  StaveDto.class))),
            @ApiResponse(responseCode = "400", description = "Requisição está invalida, o corpo da mensagem está mal formatada, por exemplo, campos faltando ou campos estão inválidos (formato inválido).   No corpo da resposta encontrar uma lista de detalhes que dará informações pertinentes para corrigir o erro. Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorDto.class))),
            @ApiResponse(responseCode = "404", description = "Recurso não foi encontrado, geralmente a url pode está errada ou recurso pedido não existe.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.404).", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "409", description = "`Requisição` foi aceita mas, os dados enviados está em conflito com o recurso a ser manipulado por exemplo: uma Pauta com um tema já foi cadastrada anteriormente.   Para maiores informações consulte a [rfc-7231](https://httpwg.org/specs/rfc7231.html#status.409).", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class))),
            @ApiResponse(responseCode = "500", description = "Error inesperado em alguma parte do processo, neste caso a api não conseguiu se recuperar do error.  Caso isto ocorra, por favor, notifique o momento do erro, crie uma issue no __repositório__ da aplicação explicando os detalhes de como aconteceu o error.  Para maiores informações consulte a [rfc-7231](https://datatracker.ietf.org/doc/html/rfc7231#section-6.6.1). ", content = @Content(mediaType = "application/json", schema = @Schema(implementation =  ErrorBaseDto.class)))
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/staves",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<StaveDto> update(
        @Parameter(name = "InputUpdateStaveDto", description = "", required = true, schema = @Schema(description = "")) @Valid @RequestBody InputUpdateStaveDto inputUpdateStaveDto,
        @Parameter(name = "id", description = "identificar único Pauta encontrar a pauta a ser atualizada", schema = @Schema(description = "")) @PathVariable("id") Long id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"startSessionVoting\" : \"2021-01-30T08:30:00Z\", \"endSessionVoting\" : \"2021-01-30T08:30:00Z\", \"totalVotes\" : 500, \"totalVotesNo\" : 200, \"description\" : \"Descrição da Pauta para o tema tal.\", \"theme\" : \"Pauta que será discutida tal assunto.\", \"id\" : 1001, \"state\" : \"create\", \"totalVotesYes\" : 300, \"createAt\" : \"2021-01-30T08:30:00Z\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
